# deployment-template.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}-${COLOR}  # 컬러별로 구분되는 이름
  namespace: ${K8S_NAMESPACE}
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/name: ${APP_NAME}
    app.kubernetes.io/instance: ${APP_NAME}-${ENV}
    app.kubernetes.io/version: v1.0.0
    app.kubernetes.io/component: ${COMPONENT}
    app.kubernetes.io/part-of: ${PROJECT_NAME}
    app.kubernetes.io/managed-by: kubectl
    env: ${ENV}
    color: ${COLOR}
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app.kubernetes.io/name: ${APP_NAME}
      app.kubernetes.io/instance: ${APP_NAME}-${ENV}
      app.kubernetes.io/component: ${COMPONENT}
      app.kubernetes.io/part-of: ${PROJECT_NAME}
      env: ${ENV}
      color: ${COLOR}  # 컬러별 selector
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
      labels:
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}-${ENV}
        app.kubernetes.io/version: v1.0.0
        app.kubernetes.io/component: ${COMPONENT}
        app.kubernetes.io/part-of: ${PROJECT_NAME}
        app.kubernetes.io/managed-by: kubectl
        env: ${ENV}
        color: ${COLOR}
    spec:
      imagePullSecrets:
        - name: nexus-docker-credentials
      containers:
        - name: ${APP_NAME}
          image: ${NEXUS_REGISTRY}/${NEXUS_REPOSITORY}/${IMAGE_PATH}:${NEXUS_TAG}
          ports:
            - containerPort: ${CONTAINER_PORT}
          env:
            - name: TZ
              value: "Asia/Seoul"
          envFrom:
            - secretRef:
                name: ${APP_NAME}-secrets
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - ${NODE_ARCH}
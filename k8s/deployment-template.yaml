apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${APP_NAME}
  namespace: ${PROJECT_NAME}-${ENV}
  labels:
    app.kubernetes.io/name: ${APP_NAME}
    app.kubernetes.io/instance: ${APP_NAME}-${ENV}
    app.kubernetes.io/version: v1.0.0
    app.kubernetes.io/component: ${COMPONENT}
    app.kubernetes.io/part-of: ${PROJECT_NAME}
    app.kubernetes.io/managed-by: kubectl
    env: ${ENV}
spec:
  replicas: ${REPLICAS}
  selector:
    matchLabels:
      app.kubernetes.io/name: ${APP_NAME}
      app.kubernetes.io/instance: ${APP_NAME}-${ENV}
      app.kubernetes.io/component: ${COMPONENT}
      app.kubernetes.io/part-of: ${PROJECT_NAME}
      env: ${ENV}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ${APP_NAME}
        app.kubernetes.io/instance: ${APP_NAME}-${ENV}
        app.kubernetes.io/version: v1.0.0
        app.kubernetes.io/component: ${COMPONENT}
        app.kubernetes.io/part-of: ${PROJECT_NAME}
        app.kubernetes.io/managed-by: kubectl
        env: ${ENV}
    spec:
      containers:
        - name: ${APP_NAME}
          image: ${DOCKER_IMAGE}:${DOCKER_TAG}
          ports:
            - containerPort: ${CONTAINER_PORT}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - ${NODE_ARCH}